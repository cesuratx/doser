# Cross-compilation CI for release artifacts
name: Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-binaries:
    name: build-${{ matrix.target }}
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            features: ""
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            features: ""
          - target: x86_64-apple-darwin
            os: macos-latest
            features: ""
          - target: aarch64-apple-darwin
            os: macos-latest
            features: ""
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build (cross)
        if: matrix.os == 'ubuntu-latest'
        run: cross build --release --target ${{ matrix.target }} -p doser_cli ${{ matrix.features }}

      - name: Build (cargo)
        if: matrix.os != 'ubuntu-latest'
        run: cargo build --release --target ${{ matrix.target }} -p doser_cli ${{ matrix.features }}

      - name: Strip binary
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            docker run --rm -v $(pwd):/work -w /work ubuntu:20.04 strip target/${{ matrix.target }}/release/doser || true
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            strip target/${{ matrix.target }}/release/doser || true
          fi

      - name: Create tarball
        run: |
          cd target/${{ matrix.target }}/release
          tar czf doser-${{ matrix.target }}.tar.gz doser
          cd ../../..

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: target/${{ matrix.target }}/release/doser-${{ matrix.target }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
